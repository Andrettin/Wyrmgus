$#include "stratagus.h"

$#include "age.h"
$#include "ai.h"
//Wyrmgus start
$#include "character.h"
//Wyrmgus end
$#include "database/preferences.h"
$#include "dialogue.h"
$#include "game/game.h"
//Wyrmgus start
$#include "grand_strategy.h"
//Wyrmgus end
$#include "iolib.h"
$#include "item/persistent_item.h"
$#include "item/unique_item.h"
$#include "map/map.h"
$#include "map/map_info.h"
$#include "map/minimap.h"
$#include "mod.h"
$#include "netconnect.h"
$#include "player/player.h"
//Wyrmgus start
$#include "province.h"
$#include "quest/achievement.h"
$#include "quest/quest.h"
$#include "script.h"
//Wyrmgus end
$#include "sound/sound.h"
$#include "sound/sound_server.h"
$#include "ui/cursor.h"
$#include "ui/ui.h"
$#include "unit/unit.h"
$#include "unit/unit_manager.h"
$#include "unit/unit_type.h"
//Wyrmgus start
$#include "upgrade/upgrade.h"
$#include "util/util.h"
//Wyrmgus end
$#include "video/font.h"
$#include "video/video.h"
$#include "widgets.h"

$using namespace wyrmgus;

$[
mt = { __index = function(t, key) return font:Get(key) end }
Fonts = {}
setmetatable(Fonts, mt)

mt = { __index = function(t, key) return UnitTypeByIdent(key) end }
UnitTypes = {}
setmetatable(UnitTypes, mt)

function GameStarting()
end
$]

#define PlayerMax 64
#define PlayerNumNeutral (PlayerMax - 1)
#define InfiniteRepairRange 0x7FFFFFFF

#define NoButton 0
#define LeftButton 2
#define MiddleButton 4
#define RightButton 8
#define UpButton 16
#define DownButton 32

#define MaxMapWidth 512
#define MaxMapHeight 512

enum Difficulties {
	DifficultyNoDifficulty = 0,
	DifficultyEasy,
	DifficultyNormal,
	DifficultyHard,
	DifficultyBrutal
};

enum TechLevels {
	NoTechLevel = 0,
	AgrarianBronzeTechLevel,
	AgrarianIronTechLevel,
	CivilizedBronzeTechLevel,
	CivilizedIronTechLevel,
	CivilizedGunpowderTechLevel
};

$using std::string;
$using std::vector;

$pfile "ai.pkg"
$pfile "campaign.pkg"
$pfile "editor.pkg"
$pfile "font.pkg"
$pfile "game.pkg"
//Wyrmgus start
$pfile "grand_strategy.pkg"
//Wyrmgus end
$pfile "map.pkg"
$pfile "minimap.pkg"
$pfile "mod.pkg"
$pfile "network.pkg"
$pfile "player.pkg"
$pfile "translate.pkg"
$pfile "trigger.pkg"
$pfile "ui.pkg"
$pfile "unit.pkg"
$pfile "upgrade.pkg"
$pfile "video.pkg"

extern void load_game_data(const std::string gsml_string);

extern int SaveGame(const std::string filepath_str);

extern const char *Translate @ _(const char *str);

extern int SyncRand(int max);
extern bool CanAccessFile(const char *filename);
void Exit(int err);

//Wyrmgus start
extern std::string GetPluralForm(std::string name);
extern std::string NameToIdent(std::string text);

extern void SaveHeroes();

extern bool LoadingPersistentHeroes;

extern int GetWorldMapTerrainTypeId(std::string terrain_type_name);

extern void SetDLCFileEquivalency(const std::string dlc_file, const std::string replacement_file);

extern void SaveQuestCompletion();
extern void SetCurrentQuest(std::string quest_ident);
extern std::string GetCurrentQuest();
extern void SetQuestCompleted(std::string quest_ident, int difficulty, bool save = true);
extern void SetQuestCompleted(std::string quest_ident, std::string difficulty_str, bool save = true);
extern void SetQuestCompleted(std::string quest_ident, bool save);

extern void SetAchievementObtained(std::string achievement_ident, const bool save = true, const bool display = true);
extern void save_achievements();

extern void CallDialogue(std::string dialogue_ident, int player, int unit_number = -1);
//Wyrmgus end

extern void load_database(const bool initial_definition);
extern void load_defines();
extern void initialize_database();
extern bool is_test_run();
extern void save_preferences();

bool is_show_tips_enabled();
