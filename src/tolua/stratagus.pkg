$#include "stratagus.h"

$#include "achievement.h"
$#include "age.h"
$#include "ai.h"
//Wyrmgus start
$#include "character.h"
//Wyrmgus end
$#include "dialogue.h"
$#include "font.h"
$#include "game.h"
//Wyrmgus start
$#include "grand_strategy.h"
//Wyrmgus end
$#include "icon.h"
$#include "iolib.h"
//Wyrmgus start
$#include "item.h"
//Wyrmgus end
$#include "map/map.h"
$#include "map/minimap.h"
$#include "mod.h"
$#include "netconnect.h"
$#include "player.h"
//Wyrmgus start
$#include "province.h"
$#include "quest.h"
$#include "script.h"
//Wyrmgus end
$#include "sound.h"
$#include "sound_server.h"
$#include "ui/ui.h"
$#include "unit/unit.h"
$#include "unit/unit_manager.h"
$#include "unit/unit_type.h"
//Wyrmgus start
$#include "upgrade/upgrade.h"
$#include "util.h"
//Wyrmgus end
$#include "video.h"
$#include "widgets.h"

$#ifdef _MSC_VER
$#pragma warning(disable:4800)
$#endif

$[
mt = { __index = function(t, key) return CFont:Get(key) end }
Fonts = {}
setmetatable(Fonts, mt)

function GameStarting()
end
$]

//Wyrmgus start
//#define MaxCosts 7
#define MaxCosts 18
//Wyrmgus end
#define FoodCost MaxCosts
#define ScoreCost MaxCosts + 1
#define ManaResCost MaxCosts + 2
#define FreeWorkersCount MaxCosts + 3
#define MaxResourceInfo MaxCosts + 4
//Wyrmgus start
//#define PlayerMax 16
#define PlayerMax 32
//Wyrmgus end
#define PlayerNumNeutral (PlayerMax - 1)
#define InfiniteRepairRange 0x7FFFFFFF

#define NoButton 0
#define LeftButton 2
#define MiddleButton 4
#define RightButton 8
#define UpButton 16
#define DownButton 32

enum Difficulties {
	DifficultyNoDifficulty = 0,
	DifficultyEasy,
	DifficultyNormal,
	DifficultyHard,
	DifficultyBrutal
};

enum TechLevels {
	NoTechLevel = 0,
	AgrarianBronzeTechLevel,
	AgrarianIronTechLevel,
	CivilizedBronzeTechLevel,
	CivilizedIronTechLevel,
	CivilizedGunpowderTechLevel
};

$using std::string;
$using std::vector;

$pfile "ai.pkg"
$pfile "campaign.pkg"
$pfile "editor.pkg"
$pfile "font.pkg"
$pfile "game.pkg"
//Wyrmgus start
$pfile "grand_strategy.pkg"
//Wyrmgus end
$pfile "map.pkg"
$pfile "master.pkg"
$pfile "minimap.pkg"
$pfile "mod.pkg"
$pfile "network.pkg"
$pfile "pathfinder.pkg"
$pfile "player.pkg"
$pfile "sound.pkg"
$pfile "translate.pkg"
$pfile "trigger.pkg"
$pfile "ui.pkg"
$pfile "unit.pkg"
$pfile "unit_type.pkg"
$pfile "upgrade.pkg"
$pfile "video.pkg"

extern int SaveGame(const std::string filename);
extern void DeleteSaveGame(const std::string filename);

extern const char *Translate @ _(const char *str);

extern int SyncRand(void);
extern int SyncRand(int max);
extern bool CanAccessFile(const char *filename);
void Exit(int err);

$extern std::string CliMapName;
extern std::string CliMapName;
extern std::string StratagusLibPath;

//Wyrmgus start
extern std::string GetPluralForm(std::string name);
extern std::string NameToIdent(std::string text);

extern void HeroAddQuest(std::string hero_full_name, std::string quest_name);
extern void HeroCompleteQuest(std::string hero_full_name, std::string quest_name);
extern void SaveCustomHero(std::string hero_full_name);
extern void DeleteCustomHero(std::string hero_full_name);
extern void SetCurrentCustomHero(std::string hero_full_name);
extern std::string GetCurrentCustomHero();
extern void ChangeCustomHeroCivilization(std::string hero_full_name, std::string civilization_name, std::string new_hero_name, std::string new_hero_family_name);
extern bool IsNameValidForCustomHero(std::string hero_name, std::string hero_family_name);
extern int GetFileLastModified(std::string file_name);
extern std::string GeneratePersonalName(std::string unit_type_ident);
extern int GetItemClassIdByName(std::string item_class);
extern std::string GetItemEffectsString(std::string item_ident);
extern std::string GetUniqueItemEffectsString(std::string item_ident);
extern void SaveHeroes();

extern bool LoadingPersistentHeroes;

extern int GetWorldMapTerrainTypeId(std::string terrain_type_name);

extern void DeleteModFaction(std::string faction_name);
extern void DeleteModUnitType(std::string unit_type_ident);
extern void DisableMod(std::string mod_file);
extern void SetDLCFileEquivalency(const std::string dlc_file, const std::string replacement_file);

extern void SaveQuestCompletion();
extern void SetCurrentQuest(std::string quest_ident);
extern std::string GetCurrentQuest();
extern void SetQuestCompleted(std::string quest_ident, int difficulty = DifficultyNormal, bool save = true);
extern void SetQuestCompleted(std::string quest_ident, bool save);
extern void SetAchievementObtained(std::string achievement_ident, const bool save = true, const bool display = true);

extern void CallDialogue(std::string dialogue_ident, int player);
extern void CallDialogueNode(std::string dialogue_ident, int node, int player);
extern void CallDialogueNodeOptionEffect(std::string dialogue_ident, int node, int option, int player);
//Wyrmgus end