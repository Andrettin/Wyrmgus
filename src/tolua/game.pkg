$bool IsReplayGame();
bool IsReplayGame();

$#include "results.h"

enum GameResults {
	GameNoResult,
	GameVictory,
	GameDefeat,
	GameDraw,
	GameQuitToMenu,
	GameRestart,
};

GameResults GameResult;

$void StopGame(GameResults result);
void StopGame(GameResults result);

extern bool GameRunning;
extern void SetGamePaused(bool paused);
extern bool GameObserve;
extern bool GameEstablishing;

//Wyrmgus start
extern std::string PlayerFaction;
//Wyrmgus end

extern unsigned long GameCycle;

$#include "settings.h"

struct SettingsPresets {
	int Race;
};

class Settings {
	void reset();

	int NetGameType;

	SettingsPresets Presets[PlayerMax];

	int Resources;
	int NumUnits;
	int Opponents;
	int Difficulty;
	int GameType;
	bool NoFogOfWar;
	bool Inside;
	int RevealMap;
	int MapRichness;
	int TechLevel;
	int MaxTechLevel;
};

extern Settings GameSettings;

#define SettingsPresetMapDefault -1

enum GameTypes {
	SettingsGameTypeMapDefault = SettingsPresetMapDefault,
	SettingsGameTypeMelee = 0,
	SettingsGameTypeFreeForAll,
	SettingsGameTypeTopVsBottom,
	SettingsGameTypeLeftVsRight,
	SettingsGameTypeManVsMachine,
	SettingsGameTypeManTeamVsMachine,
};

extern bool DefiningData;
extern void SetCurrentTotalHours(const unsigned long long hours);
